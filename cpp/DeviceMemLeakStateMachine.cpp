/*----- PROTECTED REGION ID(DeviceMemLeakStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        DeviceMemLeakStateMachine.cpp
//
// description : State machine file for the DeviceMemLeak class
//
// project :     DeviceMemLeak
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <DeviceMemLeak.h>

/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::DeviceMemLeakStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  


namespace DeviceMemLeak_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : DeviceMemLeak::is_attr1_allowed()
 *	Description : Execution allowed for attr1 attribute
 */
//--------------------------------------------------------
bool DeviceMemLeak::is_attr1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for attr1 attribute in read access.
	/*----- PROTECTED REGION ID(DeviceMemLeak::attr1StateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::attr1StateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : DeviceMemLeak::is_Start_allowed()
 *	Description : Execution allowed for Start attribute
 */
//--------------------------------------------------------
bool DeviceMemLeak::is_Start_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Start command.
	/*----- PROTECTED REGION ID(DeviceMemLeak::StartStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::StartStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DeviceMemLeak::is_Stop_allowed()
 *	Description : Execution allowed for Stop attribute
 */
//--------------------------------------------------------
bool DeviceMemLeak::is_Stop_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Stop command.
	/*----- PROTECTED REGION ID(DeviceMemLeak::StopStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::StopStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DeviceMemLeak::is_PushEncodedEvent_allowed()
 *	Description : Execution allowed for PushEncodedEvent attribute
 */
//--------------------------------------------------------
bool DeviceMemLeak::is_PushEncodedEvent_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for PushEncodedEvent command.
	/*----- PROTECTED REGION ID(DeviceMemLeak::PushEncodedEventStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::PushEncodedEventStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(DeviceMemLeak::DeviceMemLeakStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	DeviceMemLeak::DeviceMemLeakStateAllowed.AdditionalMethods

}	//	End of namespace
